{"version":3,"sources":["app.ts","environment.ts","main.ts","services/article-service.ts","resources/index.ts","styles/_fonts.scss"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n  message = 'Hello World!';\r\n}\r\n","const settings: EnvironmentSettings = {\r\n  debug: true,\r\n  testing: true\r\n};\r\n\r\nexport default settings;","import { HttpClient } from 'aurelia-fetch-client';\r\nimport { Aurelia } from 'aurelia-framework'\r\nimport environment from './environment';\r\n\r\n(<any>Promise).config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n    let httpClient = aurelia.container.get(HttpClient) as HttpClient;\r\n\r\n    httpClient.configure(config => {\r\n        config\r\n            .useStandardConfiguration()\r\n            .withBaseUrl('api/')\r\n            .withInterceptor({\r\n                request(request) {\r\n                    return request;\r\n                },\r\n                response(response) {\r\n                    //return responseInterceptor.intercept(response);\r\n                    return response;\r\n                }\r\n            });\r\n    });\r\n\r\n\r\n    aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import { autoinject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\n\r\n@autoinject\r\nexport class ArticleService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n\r\n    async getArticle(id: number) : Promise<ArticleInfo> {\r\n        const response = await this.http.fetch(\"article/\" + id);\r\n        return await response.json();\r\n    }\r\n\r\n    async deleteArticle(id: number) {\r\n        const response = await this.http.fetch(\"article/\" + id, { method: 'delete' });\r\n        return await response.json();\r\n    }\r\n\r\n    async getArticleByUrl(categotyId: number, articleUrl: string): Promise<ArticleInfo> {\r\n        const response = await this.http.fetch(\"article/url/\" + categotyId + \"/\" + articleUrl);\r\n        return await response.json();\r\n    }\r\n\r\n    async getSection(url: string) : Promise<ArticleSectionInfo> {\r\n        const response = await this.http.fetch(\"article/section/\" + url);\r\n        return await response.json();\r\n    }\r\n\r\n    async getCategories(sectionId: number): Promise<ArticleCategory[]> {\r\n        const response = await this.http.fetch(\"article/categories/\" + sectionId);\r\n        return await response.json();\r\n    }\r\n\r\n    async getCategory(categoryUrl: string) : Promise<ArticleCategoryInfo> {\r\n        const response = await this.http.fetch(\"article/category/\" + categoryUrl);\r\n        return await response.json();\r\n    }\r\n\r\n    async getFeatured(categoryId: number) : Promise<ArticleInfo> {\r\n        const response = await this.http.fetch(\"article/\" + categoryId + \"/featured\");\r\n        return await response.json();\r\n    }   \r\n\r\n}\r\n\r\nexport class ArticleInfo {\r\n    \r\n}\r\n\r\nexport class ArticleSectionInfo {\r\n    \r\n}\r\n\r\nexport class ArticleCategory {\r\n    \r\n}\r\n\r\nexport class ArticleCategoryInfo {\r\n    \r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  config.globalResources([]);\r\n}\r\n","ï»¿@import url(//fonts.googleapis.com/css?family=Ubuntu:400,500);\r\n@import url(//fonts.googleapis.com/css?family=Hind+Vadodara:300,400,500);\r\n\r\n@font-face {\r\n  font-family: 'Glyphicons Halflings';\r\n  src: url('/fonts/glyphicons-halflings-regular.eot');\r\n  src: url('/fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('/fonts/glyphicons-halflings-regular.woff') format('woff'), url('/fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('/fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular') format('svg');\r\n}\r\n"],"sourceRoot":"../src"}