{"version":3,"sources":["app.ts","environment.ts","infrastructure/event-emitter.ts","infrastructure/error-interceptor.ts","main.ts","resources/index.ts","services/article-service.ts","services/user-service.ts","styles/_fonts.scss"],"names":[],"mappings":";;IAAA;QAAA;YACE,YAAO,GAAG,gBAAgB,CAAC;QAC7B,CAAC;QAAD,UAAC;IAAD,CAFA,AAEC,IAAA;IAFY,kBAAG;;;;;ICAhB,IAAM,QAAQ,GAAwB;QACpC,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;IAEF,kBAAe,QAAQ,CAAC;;;;;ICDxB,IAAa,YAAY;QAErB,sBAAoB,eAAgC;YAAhC,oBAAe,GAAf,eAAe,CAAiB;QAEpD,CAAC;QAKD,8BAAO,GAAP,UAAQ,SAAoB,EAAE,IAAU;YACpC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAClD,CAAC;QAKD,gCAAS,GAAT,UAAU,SAAoB,EAAE,OAA8B;YAC1D,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAC9D,CAAC;QACL,mBAAC;IAAD,CAnBA,AAmBC,IAAA;IAnBY,YAAY;QADxB,8BAAU;iDAG8B,0CAAe;OAF3C,YAAY,CAmBxB;IAnBY,oCAAY;;;;;ICCzB,IAAa,gBAAgB;QAEzB,0BAAoB,YAA0B;YAA1B,iBAAY,GAAZ,YAAY,CAAc;QAE9C,CAAC;QAED,mCAAQ,GAAR,UAAS,QAAkB;YACvB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;gBACzB,IAAI,OAAO,GAAG,cAAY,QAAQ,CAAC,MAAM,SAAI,QAAQ,CAAC,GAAK,CAAC;gBAC5D,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;YACnE,CAAC;YAED,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;YAC/B,CAAC;YAED,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;YAE9B,CAAC;YAED,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC;QAEL,uBAAC;IAAD,CAvBA,AAuBC,IAAA;IAvBY,gBAAgB;QAD5B,8BAAU;iDAG2B,4BAAY;OAFrC,gBAAgB,CAuB5B;IAvBY,4CAAgB;;;;;ICCvB,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAAgC,OAAgB;;gBAEtC,UAAU,EACV,gBAAgB,EAShB,WAAW;;;;qCAVE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,iCAAU,CAAe;2CACzC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,oCAAgB,CAAqB;wBAEpF,UAAU,CAAC,SAAS,CAAC,UAAA,MAAM;4BACvB,MAAM;iCACD,wBAAwB,EAAE;iCAC1B,WAAW,CAAC,MAAM,CAAC;iCACnB,eAAe,CAAC,gBAAgB,CAAC,CAAC;wBAC3C,CAAC,CAAC,CAAC;sCAEiB,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,0BAAW,CAAgB;wBACrE,qBAAM,WAAW,CAAC,UAAU,EAAE,EAAA;;wBAA9B,SAA8B,CAAC;wBAE/B,OAAO,CAAC,GAAG;6BACN,qBAAqB,EAAE;6BACvB,QAAQ,CAAC,MAAM,EAAE,WAAW,CAAC;6BAC7B,OAAO,CAAC,WAAW,CAAC,CAAC;wBAE5B,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;4BACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;wBACnC,CAAC;wBAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;4BACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;wBACxC,CAAC;wBAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;;;;;KAC/C;IA7BD,8BA6BC;;;;;ICvCD,mBAA0B,MAA8B;QACtD,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAFD,8BAEC;;;;;ICAD,IAAa,cAAc;QAEvB,wBAAoB,IAAgB;YAAhB,SAAI,GAAJ,IAAI,CAAY;QACpC,CAAC;QAGK,mCAAU,GAAhB,UAAiB,EAAU;;;;;gCACN,qBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,EAAA;;uCAAtC,SAAsC;4BAChD,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;gCAA5B,sBAAO,SAAqB,EAAC;;;;SAChC;QAEK,sCAAa,GAAnB,UAAoB,EAAU;;;;;gCACT,qBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAA;;uCAA5D,SAA4D;4BACtE,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;gCAA5B,sBAAO,SAAqB,EAAC;;;;SAChC;QAEK,wCAAe,GAArB,UAAsB,UAAkB,EAAE,UAAkB;;;;;gCACvC,qBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,UAAU,GAAG,GAAG,GAAG,UAAU,CAAC,EAAA;;uCAArE,SAAqE;4BAC/E,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;gCAA5B,sBAAO,SAAqB,EAAC;;;;SAChC;QAEK,mCAAU,GAAhB,UAAiB,GAAW;;;;;gCACP,qBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,GAAG,CAAC,EAAA;;uCAA/C,SAA+C;4BACzD,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;gCAA5B,sBAAO,SAAqB,EAAC;;;;SAChC;QAEK,sCAAa,GAAnB,UAAoB,SAAiB;;;;;gCAChB,qBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,SAAS,CAAC,EAAA;;uCAAxD,SAAwD;4BAClE,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;gCAA5B,sBAAO,SAAqB,EAAC;;;;SAChC;QAEK,oCAAW,GAAjB,UAAkB,WAAmB;;;;;gCAChB,qBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,WAAW,CAAC,EAAA;;uCAAxD,SAAwD;4BAClE,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;gCAA5B,sBAAO,SAAqB,EAAC;;;;SAChC;QAEK,oCAAW,GAAjB,UAAkB,UAAkB;;;;;gCACf,qBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,GAAG,WAAW,CAAC,EAAA;;uCAA5D,SAA4D;4BACtE,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;gCAA5B,sBAAO,SAAqB,EAAC;;;;SAChC;QAEL,qBAAC;IAAD,CAzCA,AAyCC,IAAA;IAzCY,cAAc;QAD1B,8BAAU;iDAGmB,iCAAU;OAF3B,cAAc,CAyC1B;IAzCY,wCAAc;IA2C3B;QAAA;QAEA,CAAC;QAAD,kBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,kCAAW;IAIxB;QAAA;QAEA,CAAC;QAAD,yBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,gDAAkB;IAI/B;QAAA;QAEA,CAAC;QAAD,sBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,0CAAe;IAI5B;QAAA;QAEA,CAAC;QAAD,0BAAC;IAAD,CAFA,AAEC,IAAA;IAFY,kDAAmB;;;;;ICvDhC,IAAa,WAAW;QAIpB,qBAAoB,IAAgB;YAAhB,SAAI,GAAJ,IAAI,CAAY;QACpC,CAAC;QAEK,gCAAU,GAAhB;;;;;gCACmB,qBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAA;;uCAArC,SAAqC;4BACpD,KAAA,IAAI,CAAA;4BAAQ,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;4BAAjC,GAAK,IAAI,GAAG,SAAqB,CAAC;4BAElC,sBAAO,IAAI,CAAC,IAAI,EAAC;;;;SACpB;QAGK,2BAAK,GAAX,UAAY,QAAQ,EAAE,QAAQ;;oBACpB,YAAY;;;;2CAAG;gCACjB,KAAK,EAAE,QAAQ;gCACf,QAAQ,EAAE,QAAQ;gCAClB,UAAU,EAAE,IAAI;6BACnB;4BAEgB,qBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAClD,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,2BAAI,CAAC,YAAY,CAAC,EAAE,CAC/C,EAAA;;uCAFgB,SAEhB;4BAEc,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;qCAArB,SAAsC;4BACrD,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gCACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;4BAC5B,CAAC;4BAED,sBAAO,IAAI,CAAC,IAAI,EAAC;;;;SACpB;QAEK,4BAAM,GAAZ;;;;;gCACmB,qBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EACrD;gCACI,MAAM,EAAE,MAAM;6BACjB,CAAC,EAAA;;uCAHa,SAGb;4BAEK,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;gCAA5B,sBAAO,SAAqB,EAAC;;;;SAChC;QAEK,4BAAM,GAAZ,UAAa,IAAc;;oBACnB,aAAa;;;;4CAAG;gCAChB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gCACvB,SAAS,EAAE,IAAI,CAAC,SAAS;6BAC5B;4BAEc,qBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EACrD;oCACI,MAAM,EAAE,KAAK;oCACb,IAAI,EAAE,2BAAI,CAAC,aAAa,CAAC;iCACxB,CAAC,EAAA;;uCAJS,SAIT;4BAEO,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;qCAArB,SAA2C;4BACxD,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gCACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;4BAC5B,CAAC;4BACD,sBAAO,MAAM,CAAC,MAAM,EAAC;;;;SACxB;QAEL,kBAAC;IAAD,CA9DA,AA8DC,IAAA;IA9DY,WAAW;QADvB,8BAAU;iDAKmB,iCAAU;OAJ3B,WAAW,CA8DvB;IA9DY,kCAAW;IAgExB;QAAA;QAGA,CAAC;QAAD,eAAC;IAAD,CAHA,AAGC,IAAA;IAHY,4BAAQ;IAKrB;QAAA;QAIA,CAAC;QAAD,oBAAC;IAAD,CAJA,AAIC,IAAA;IAJY,sCAAa;IAM1B;QAAA;QAGA,CAAC;QAAD,yBAAC;IAAD,CAHA,AAGC,IAAA;IAHY,gDAAkB;;;AC/E/B,OAAO,CAAC,qDAAI;AACZ,OAAO,CAAC,gEAAI;AAEZ,UAAU;EACR,WAAW,EAAE,sBAAuB;EACpC,GAAG,EAAE,8CAAG;EACR,GAAG,EAAE,qDAAG,CAAmD,2BAAM,EAAuB,+CAAG,CAA6C,cAAM,EAAU,8CAAG,CAA4C,kBAAM,EAAc,0EAAG,CAAwE,aAAM","file":"app-bundle.js","sourcesContent":["export class App {\r\n  message = 'Hello World 2!';\r\n}\r\n","const settings: EnvironmentSettings = {\r\n  debug: true,\r\n  testing: true\r\n};\r\n\r\nexport default settings;","import { autoinject } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@autoinject\nexport class EventEmitter {\n\n    constructor(private eventAggregator: EventAggregator) {\n\n    }\n\n    publish(eventType: \"ServerError\", data: ServerError);\n    publish(eventType: \"ValidationError\", data: ValidationError);\n\n    publish(eventType: EventType, data?: any) {\n        this.eventAggregator.publish(eventType, data);\n    }\n\n    subscribe(eventType: \"ServerError\", handler: (event: ServerError) => void);\n    subscribe(eventType: \"ValidationError\", handler: (event: ValidationError) => void);\n\n    subscribe(eventType: EventType, handler: (event?: any) => void) {\n        return this.eventAggregator.subscribe(eventType, handler);\n    }\n}\n\ntype EventType = \"ServerError\" | \"ValidationError\";\n\ninterface ValidationError {\n    message: string[];\n}\n\ninterface ServerError {\n    message: string;\n}","import { autoinject } from \"aurelia-framework\";\nimport { EventEmitter } from \"./event-emitter\";\nimport { Interceptor } from \"aurelia-fetch-client\";\n\n@autoinject\nexport class ErrorInterceptor implements Interceptor {\n\n    constructor(private eventEmitter: EventEmitter) {\n\n    }\n\n    response(response: Response) {\n        if (response.status >= 500) {\n            let message = `Received ${response.status} ${response.url}`;\n            this.eventEmitter.publish(\"ServerError\", { message: message });\n        }\n\n        if (response.status === 401) {\n            window.location.href = \"/\";\n        }\n\n        if (response.status === 403) {\n            //TODO: handle 403\n        }\n\n        return response;\n    }\n\n}","import { HttpClient } from \"aurelia-fetch-client\";\nimport { Aurelia } from \"aurelia-framework\"\nimport environment from \"./environment\";\nimport { ErrorInterceptor } from \"./infrastructure/error-interceptor\";\nimport { UserService } from \"./services/user-service\";\n\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport async function configure(aurelia: Aurelia) {\n\n    const httpClient = aurelia.container.get(HttpClient) as HttpClient;\n    const errorInterceptor = aurelia.container.get(ErrorInterceptor) as ErrorInterceptor;\n\n    httpClient.configure(config => {\n        config\n            .useStandardConfiguration()\n            .withBaseUrl(\"api/\")\n            .withInterceptor(errorInterceptor);\n    });\n\n    const userService = aurelia.container.get(UserService) as UserService;\n    await userService.initialize();\n\n    aurelia.use\n        .standardConfiguration()\n        .instance('User', userService)\n        .feature(\"resources\");\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin(\"aurelia-testing\");\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  config.globalResources([]);\r\n}\r\n","import { autoinject } from \"aurelia-framework\";\r\nimport { HttpClient } from \"aurelia-fetch-client\";\r\n\r\n@autoinject\r\nexport class ArticleService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n\r\n    async getArticle(id: number) : Promise<ArticleInfo> {\r\n        const response = await this.http.fetch(\"article/\" + id);\r\n        return await response.json();\r\n    }\r\n\r\n    async deleteArticle(id: number) {\r\n        const response = await this.http.fetch(\"article/\" + id, { method: 'delete' });\r\n        return await response.json();\r\n    }\r\n\r\n    async getArticleByUrl(categotyId: number, articleUrl: string): Promise<ArticleInfo> {\r\n        const response = await this.http.fetch(\"article/url/\" + categotyId + \"/\" + articleUrl);\r\n        return await response.json();\r\n    }\r\n\r\n    async getSection(url: string) : Promise<ArticleSectionInfo> {\r\n        const response = await this.http.fetch(\"article/section/\" + url);\r\n        return await response.json();\r\n    }\r\n\r\n    async getCategories(sectionId: number): Promise<ArticleCategory[]> {\r\n        const response = await this.http.fetch(\"article/categories/\" + sectionId);\r\n        return await response.json();\r\n    }\r\n\r\n    async getCategory(categoryUrl: string) : Promise<ArticleCategoryInfo> {\r\n        const response = await this.http.fetch(\"article/category/\" + categoryUrl);\r\n        return await response.json();\r\n    }\r\n\r\n    async getFeatured(categoryId: number) : Promise<ArticleInfo> {\r\n        const response = await this.http.fetch(\"article/\" + categoryId + \"/featured\");\r\n        return await response.json();\r\n    }   \r\n\r\n}\r\n\r\nexport class ArticleInfo {\r\n    \r\n}\r\n\r\nexport class ArticleSectionInfo {\r\n    \r\n}\r\n\r\nexport class ArticleCategory {\r\n    \r\n}\r\n\r\nexport class ArticleCategoryInfo {\r\n    \r\n}","import { autoinject } from \"aurelia-framework\";\r\nimport { HttpClient, json } from \"aurelia-fetch-client\";\r\n\r\n@autoinject\r\nexport class UserService {\r\n\r\n    user: UserInfo;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    async initialize() : Promise<UserInfo> {\r\n        let response = await this.http.fetch(\"account/user\");\r\n        this.user = await response.json();\r\n\r\n        return this.user;\r\n    }\r\n\r\n\r\n    async login(username, password) : Promise<UserInfo> {\r\n        const loginRequest = {\r\n            Email: username,\r\n            Password: password,\r\n            RememberMe: true\r\n        };\r\n\r\n        const response = await this.http.fetch(\"account/login\",\r\n            { method: 'post', body: json(loginRequest) }\r\n        );\r\n\r\n        const result = await response.json() as LoginResponse;\r\n        if (result.status === 0) {\r\n            this.user = result.user;\r\n        }\r\n\r\n        return this.user;\r\n    }\r\n\r\n    async logout() {\r\n        let response = await this.http.fetch(\"account/logout\",\r\n        {\r\n            method: 'post'\r\n        });\r\n\r\n        return await response.json();\r\n    }\r\n\r\n    async update(user: UserInfo) :Promise<number> {\r\n        let updateRequest = {\r\n            Username: user.username,\r\n            FirstName: user.firstName\r\n        };\r\n\r\n        let response = await this.http.fetch(\"account/update\",\r\n        {\r\n            method: \"put\",\r\n            body: json(updateRequest)\r\n            });\r\n\r\n        let result = await response.json() as UserUpdateResponse;\r\n        if (result.status === 0) {\r\n            this.user = result.user;\r\n        }\r\n        return result.status;\r\n    }\r\n\r\n}\r\n\r\nexport class UserInfo {\r\n    username: string;\r\n    firstName:string;\r\n}\r\n\r\nexport class LoginResponse {\r\n    user: UserInfo;\r\n    status: number;\r\n    isAuthenticated: boolean;\r\n}\r\n\r\nexport class UserUpdateResponse {\r\n    status: number;\r\n    user: UserInfo;\r\n}","﻿@import url(//fonts.googleapis.com/css?family=Ubuntu:400,500);\r\n@import url(//fonts.googleapis.com/css?family=Hind+Vadodara:300,400,500);\r\n\r\n@font-face {\r\n  font-family: 'Glyphicons Halflings';\r\n  src: url('/fonts/glyphicons-halflings-regular.eot');\r\n  src: url('/fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('/fonts/glyphicons-halflings-regular.woff') format('woff'), url('/fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('/fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular') format('svg');\r\n}\r\n"],"sourceRoot":"../src"}